** start of undefined **

<!DOCTYPE html>
<html>
  <head lang="en">
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="styles.css" />
    <title>FCCtelephoneValidatorCertProject</title>
  </head>
  <body>
    <div class = "container">
      <p>Validate A Telephone Number:</p>
      <input id="user-input" placeholder= "1(000)000-0000" >
      <div></div>
      <button id="check-btn">Check</button>
      <button id="clear-btn">Clear</button>
      <div id="results-div"></div><div></div>
      <button class="phone-btn" id="phone-btn1">1</button><button class="phone-btn" id="phone-btn2">2</button><button class="phone-btn" id="phone-btn3">3</button>
      <div></div>
      <button class="phone-btn" id="phone-btn4">4</button><button class="phone-btn" id="phone-btn5">5</button><button class="phone-btn" id="phone-btn6">6</button>
      <div></div>
      <button class="phone-btn" id="phone-btn7">7</button><button class="phone-btn" id="phone-btn8">8</button><button class="phone-btn" id="phone-btn9">9</button>
      <div></div>
      <button id="phone-btnx">(</button><button class="phone-btn" id="phone-btn0">0</button><button id="phone-btnz">)</button>
    </div>
    <script src="script.js"></script>
  </body>
</html>

** end of undefined **

** start of undefined **

body {
  background-color:  white;
  align-content: center;
  text-align: center;
  border: 5px solid black;
  width: 270px;
  height: 370px;
  border-radius: 5px;
} 

.container {
  background-color: rgb(27,27,50);
}

p {
  font-size: 30px;
  border-bottom: 5px solid black;
  padding-bottom: 20px;
  padding-top: 25px;
  background-color: rgb(27,27,50);
  color: limegreen;
}

#user-input {
  border: 2px solid rgb(27,27,50);
  margin-bottom: 10px;
  background-color: gray;
  color: limegreen;
}

::placeholder {
  color: limegreen;
}

#check-btn, #clear-btn {
  border: 2px solid rgb(27,27,50);
  margin-bottom: 10px;
  background-color: limegreen;
  border-radius: 20px;
}

.phone-btn {
  background-color: lightgray;
  height: 40px;
  width: 40px;
  font-size: 25px;
}

#phone-btnx, #phone-btnz {
  background-color: gray;
  height: 40px;
  width: 40px;
  font-size: 25px;
  color: limegreen;
}



** end of undefined **

** start of undefined **

/*TO.DO
1.alert with no input
2.clear button removes content in results div
3.checks for valid and invalid US numbers 
*/
const uInput = document.getElementById("user-input")
const checkBtn = document.getElementById("check-btn")
const clearBtn = document.getElementById("clear-btn")
const result = document.getElementById("results-div")
//Number Validator Expression
const phoneNumRegex = /^1?[-\s]?(\(\d{3}\)|\d{3})[-\s]?\d{3}[-\s]?\d{4}$/;
// Functions
const clearFunction = () => {
  result.innerText = "";
  uInput.value = "";
}
clearBtn.addEventListener("click", function() {
  clearFunction();
});

checkBtn.addEventListener("click", function() {
  var number = uInput.value;
  if (number === '') {
    alert ("Please provide a phone number");
  } else if (phoneNumRegex.test(number)) {
    result.innerText = "Valid US number: " + number;
      result.style.color = "limegreen";
  } else {
    result.innerText = "Invalid US number: " + number;
      result.style.color = "red";
  }
});

// adding 0-9, and() button functionality
for (let i = 0; i <= 9; i++) {
    const digiButton = document.getElementById("phone-btn" + i);
    digiButton.addEventListener("click", function() {
        uInput.value += i; 
    });
}
const oParButton = document.getElementById("phone-btnx");

oParButton.addEventListener("click", function() {
    uInput.value += "(";
});

const cParButton = document.getElementById("phone-btnz");
cParButton.addEventListener("click", function() {
    uInput.value += ")";
});

/*
Validator- variations, valid
5555555555
15555555555
1(555)5555555 or (555)555-5555
1 555-555-5555
number should be 7,or 10 numbers long
allow dash, and parentheses, whitespace or no whitespace
*/


** end of undefined **

